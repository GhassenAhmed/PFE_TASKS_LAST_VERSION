package com.example.demo.services;

import java.io.File;
import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entities.Food;
import com.example.demo.payloads.Photo;
import com.example.demo.repositories.FoodRepository;

@Service
public class FoodService {
	
	@Autowired
	FoodRepository foodRepository;
	
	
	
	public List<Food> getAllFood() {
	    List<Food> foods = foodRepository.findAll();
	    if (foods.isEmpty()) {
	        return Collections.emptyList();
	    }
	    
	    return foods;
	}
	
	
	public Food addFood(File file,String name , double price) {
		
		 if (file == null || name == null || price == 0) {
	            throw new IllegalArgumentException("Food object and its properties cannot be null.");
	     }
		 
		Food newFood = new Food();
		newFood.setName(name);
		newFood.setPhoto(price);
		newFood.setPrice(food.getPrice());
		
		Food savedFood = foodRepository.save(newFood);
		
		return savedFood;
	}
	
	public void deleteFood(Long id) throws Exception {
		Food food  = foodRepository.findById(id).get();
		if(food==null) {
			throw new Exception("Food not found.");
		}else {
			foodRepository.delete(food);
		}
	}
	
	public Food updatefood(Food food,Long id) throws Exception {
		Food updatedFood = foodRepository.findById(id).get();
		if(updatedFood==null || food == null) {
			throw new Exception("Food Not Found.");
		}else {
			updatedFood.setName(food.getName());
			updatedFood.setPrice(food.getPrice());
			foodRepository.save(updatedFood);
		}
		return updatedFood;
		
	}

	public void updatePhoto(Photo photo , Long id) throws Exception {
		Food updatedFood = foodRepository.findById(id).get();
		if(updatedFood==null) {
			throw new Exception("Food Not Found.");
		}else {
			updatedFood.setPhoto(photo.getPhoto());
			foodRepository.save(updatedFood);
		}
	}
}
